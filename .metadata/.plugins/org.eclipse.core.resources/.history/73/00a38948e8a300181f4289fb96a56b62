package com.ptellos.aplication;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.ptellos.dao.DAOLogin;

@WebServlet(name = "LoginServlet", urlPatterns = {"login_usuario"}) 
public class LoginServlet extends HttpServlet {
	
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {
    	//Aquí sería escribir un mensaje de error normal.
        response.getWriter().print("ERROR: En esta página no se puede hacer un HTTP GET");  
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {
        if (checkUser(request)) {
        	//El usuario se ha logueado correctamente
        	//Conservar login en cache/cookies
        	successUser(request, response);
        	request.setAttribute("user", "login: Bien logueado" + request.getParameter("username"));
            request.getRequestDispatcher("response.jsp").forward(request, response);
        } else {
        	//El usuario o contraseña no es correcto
        	
        	request.setAttribute("user", "login: Mal logueado" + request.getParameter("username"));
            request.getRequestDispatcher("response.jsp").forward(request, response); 
        }   
    }
	
    public boolean checkUser(HttpServletRequest request) {
    	boolean existUser = false;
    	List<String> args = new ArrayList<String>();
    	String nombre = request.getParameter("username");
    	String password = request.getParameter("password");
    	try {
			if (DAOLogin.existUser(nombre, password)) {
				existUser = true;
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	return existUser;
    }
    
    public String successUser(HttpServletRequest request, HttpServletResponse response) {
    	String contextPath = request.getContextPath();//We need this path to set cookie's path.
    	Cookie [] cookies = request.getCookies();
    	Cookie cookieToProcess = null;
    	for (Cookie cookie : cookies) {
    	    //Buscamos la cookie que necesitamos.
    	    //Esta es la forma original aunque me voy a quedar con la abreviada de momento
    		//if ("profileUrl".equals(cookie.getName())  && "/userName".equals(cookie.getPath())) {
    		if ("profileUrl".equals(cookie.getName())) {
    	        cookieToProcess = cookie;
    	        break;
    	    }
    	}
    	if (cookieToProcess == null) {
    	    //No hay cookie. 
    		//Esto ocurre cuando un usuario entra al sitio por primera vez o tiene deshabilitadas las cookies.
    	    //En este caso creamos a nueva cookie.
    	    String cookieName = "profileUrl";
    	    String cookieValue = request.getParameter("username");
    	    Cookie newCookie = new Cookie(cookieName, cookieValue);
    	    newCookie.setPath(contextPath);
    	    response.addCookie(newCookie);
    	} else {
    	    String cookieValue = cookieToProcess.getValue();//Retrieve value from the cookie.
    	}
    }
}