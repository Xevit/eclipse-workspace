<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>JBoss Weekly 2018-11-16</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/bxIgDuUW540/jboss-weekly-2018-11-16" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="hibernate-orm" scheme="searchisko:content:tags" /><category term="ibm" scheme="searchisko:content:tags" /><category term="infinispan" scheme="searchisko:content:tags" /><category term="jBPM" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="red hat" scheme="searchisko:content:tags" /><category term="weekly_editorial" scheme="searchisko:content:tags" /><category term="weekly_update" scheme="searchisko:content:tags" /><author><name>Jason Porter</name></author><id>searchisko:content:id:jbossorg_blog-jboss_weekly_2018_11_16</id><updated>2018-11-17T00:08:14Z</updated><published>2018-11-17T00:08:00Z</published><content type="html">&lt;!-- [DocumentBodyStart:34dc5c9a-daac-47e6-aeea-0cc1b90d556f] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;div&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;Welcome back! It has been a busy couple of weeks for us within Red Hat Middleware. Hot on the tails of Oracle CodeOne is Devoxx BE, followed shortly after by Devoxx MA!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;Red Hat and IBM&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;We want to start things off with news you have probably heard, but if not, IBM and Red Hat have entered into an agreement where IBM will be purchasing Red Hat. You may have read various blogs, articles or news stories about the acquisition. We asked Mark Little, VP of Engineering here at Red Hat for some thoughts:&lt;/p&gt;&lt;/div&gt;&lt;div class="quoteblock"&gt;&lt;blockquote class="jive-quote"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;They say 24 hours is a long time in politics but maybe it applies to the technology sector too! Between the last time we published the editorial and now Red Hat has agreed to be acquired by IBM. As the public statements from IBM and Red Hat discuss, the deal won&amp;#8217;t officially close until the second half of 2019 and until that happens both companies must remain operating as independent entities. There have also been strong statements from both sides that Red Hat will be a separate entity within IBM in order to preserve the benefits of acquiring such a leader in the open source space. At this stage though there are very few details that I or others can share publicly. However, and I&amp;#8217;ve written about this in my personal &lt;a class="jive-link-external-small" href="http://markclittle.blogspot.com/2018/10/red-hat-and-ibm-really.html" rel="nofollow"&gt;blog&lt;/a&gt;, I feel quietly confident that this acquisition (more like a semi-merger) will be good for Red Hat, our communities and our customers, as well as IBM.&lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;p&gt;Thanks Mark!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h2&gt;Releases&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;Naturally, there have been a number of releases in the past couple of weeks. Here are some of the highlights:&lt;/p&gt;&lt;/div&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/11/hotrod-clients-c-and-c-830final-are-out.html" rel="nofollow"&gt;Inifinspan Hotrod C++ and C# 8.3.0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://www.keycloak.org/docs/latest/release_notes/index.html" rel="nofollow"&gt;Keycloak 4.6.0.Final&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/11/15/hibernate-orm-540-cr1-out/" rel="nofollow"&gt;Hibernate ORM 5.4.0.CR1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/11/infinispan-941final-and-infinispan.html" rel="nofollow"&gt;Infinispan 9.4.1.Final and Infinispan Spring Boot Starter 2.1.0.Final&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h2&gt;Blogs&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;We&amp;#8217;d also like to draw your attention to some blogs from the community:&lt;/p&gt;&lt;/div&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://mswiderski.blogspot.com/2018/11/jbpm-empowered-by-camel-to-integrate.html" rel="nofollow"&gt;Apache Camel and jBPM integration update&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/11/the-fastest-path-to-running-infinispan.html" rel="nofollow"&gt;Running Infinispan on OpenShift&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://dandreadis.blogspot.com/2018/11/jakarta-ee-action-at-devoxx-belgium-2018.html" rel="nofollow"&gt;Jakarta EE at Devoxx Belgium&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/11/appdev-in-cloud-how-to-put-red-hat-decision-manager-in-your-cloud.html" rel="nofollow"&gt;Red Hat Decision Manager in the Cloud&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;p&gt;Thank you everyone for being part of the wider Red Hat Middleware family!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:34dc5c9a-daac-47e6-aeea-0cc1b90d556f] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/bxIgDuUW540" height="1" width="1" alt=""/&gt;</content><summary>Welcome back! It has been a busy couple of weeks for us within Red Hat Middleware. Hot on the tails of Oracle CodeOne is Devoxx BE, followed shortly after by Devoxx MA! Â  Red Hat and IBM We want to start things off with news you have probably heard, but if not, IBM and Red Hat have entered into an agreement where IBM will be purchasing Red Hat. You may have read various blogs, articles or news sto...</summary><dc:creator>Jason Porter</dc:creator><dc:date>2018-11-17T00:08:00Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2018/11/16/jboss-weekly-2018-11-16</feedburner:origLink></entry><entry><title>Dynamically Generating KeyStores, TrustStores, and Certificates with WildFly Elytron</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ADyjZsArsOw/dynamically-generating-keystores.html" /><category term="Elytron" scheme="searchisko:content:tags" /><category term="feed_group_name_wildfly" scheme="searchisko:content:tags" /><category term="feed_name_jucook" scheme="searchisko:content:tags" /><category term="one-way-ssl" scheme="searchisko:content:tags" /><category term="ssl" scheme="searchisko:content:tags" /><category term="testing" scheme="searchisko:content:tags" /><category term="two-way-ssl" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><category term="x509certificate" scheme="searchisko:content:tags" /><author><name>Justin Cook</name></author><id>searchisko:content:id:jbossorg_blog-dynamically_generating_keystores_truststores_and_certificates_with_wildfly_elytron</id><updated>2018-11-16T17:14:00Z</updated><published>2018-11-16T17:14:00Z</published><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang=""&gt;&lt;head&gt; &lt;meta charset="utf-8" /&gt; &lt;meta name="generator" content="pandoc" /&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" /&gt; &lt;title&gt;dynamically-generating-certificates-keystores-in-elytron&lt;/title&gt; &lt;style type="text/css"&gt; code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} &lt;/style&gt; &lt;style type="text/css"&gt;a.sourceLine { display: inline-block; line-height: 1.25; } a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; } a.sourceLine:empty { height: 1.2em; position: absolute; } .sourceCode { overflow: visible; } code.sourceCode { white-space: pre; position: relative; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { code.sourceCode { white-space: pre-wrap; } a.sourceLine { text-indent: -1em; padding-left: 1em; } } pre.numberSource a.sourceLine { position: relative; } pre.numberSource a.sourceLine:empty { position: absolute; } pre.numberSource a.sourceLine::before { content: attr(data-line-number); position: absolute; left: -5em; text-align: right; vertical-align: baseline; border: none; pointer-events: all; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { } @media screen { a.sourceLine::before { text-decoration: underline; } } code span.al { color: #ff0000; font-weight: bold; } /* Alert */ code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */ code span.at { color: #7d9029; } /* Attribute */ code span.bn { color: #40a070; } /* BaseN */ code span.bu { } /* BuiltIn */ code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */ code span.ch { color: #4070a0; } /* Char */ code span.cn { color: #880000; } /* Constant */ code span.co { color: #60a0b0; font-style: italic; } /* Comment */ code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */ code span.do { color: #ba2121; font-style: italic; } /* Documentation */ code span.dt { color: #902000; } /* DataType */ code span.dv { color: #40a070; } /* DecVal */ code span.er { color: #ff0000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.fl { color: #40a070; } /* Float */ code span.fu { color: #077992; } /* Function */ code span.im { } /* Import */ code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */ code span.kw { color: #007020; font-weight: bold; } /* Keyword */ code span.op { color: #666666; } /* Operator */ code span.ot { color: #007020; } /* Other */ code span.pp { color: #bc7a00; } /* Preprocessor */ code span.sc { color: #4070a0; } /* SpecialChar */ code span.ss { color: #bb6688; } /* SpecialString */ code span.st { color: #4070a0; } /* String */ code span.va { color: #19177c; } /* Variable */ code span.vs { color: #4070a0; } /* VerbatimString */ code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */ &lt;/style&gt; &lt;!--[if lt IE 9]&gt; &lt;script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js"&gt;&lt;/script&gt; &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 id="dynamically-generating-keystores-truststores-and-certificates-with-wildfly-elytron"&gt;Dynamically Generating KeyStores, TrustStores, and Certificates with WildFly Elytron&lt;/h1&gt;&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;&lt;p&gt;It is now possible to quickly and easily generate KeyStores, TrustStores, and Certificates by utilizing the Elytron Examples methods. A new utility class, CertificateGenerator, has been added that can generate a KeyStore and TrustStore, along with saving them to a file-system directory, with a single API call. This utility class can further be used to easily generate client and server KeyStores and TrustStores for Two Way SSL or can be easily fully customized to create as many KeyStores, TrustStores, Certificates (self signed and signed) as wanted, along with saving as many of those KeyStores and TrustStores to as many or as few directories as wanted. This blog post will go into several of the customization and default methods available, along with showing an example. Further examples can be found in the CertificateGenerationExample class and further information on the various methods can be found in the Elytron Examples Javadoc. &lt;strong&gt;It is important to remember that this utility is designed to be used for testing purposes and examples, since the certificates are self-signed or signed by a test certificate authority.&lt;/strong&gt;&lt;/p&gt;&lt;h2 id="pre-requirements"&gt;Pre-requirements&lt;/h2&gt;&lt;ol type="1"&gt;&lt;li&gt;Clone the Elytron Examples git repository from &lt;a href="https://github.com/wildfly-security-incubator/elytron-examples/"&gt;Github&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Compile the project with Maven, for example with bash: cd dynamic-certificates;mvn clean install&lt;/li&gt;&lt;li&gt;Either import the jar (target/dynamic-certificates-1.0.0.Alpha1-SNAPSHOT.jar) into your Java project or add a Maven dependency to depend on the dynamic-certificates artifact built in the previous step&lt;/li&gt;&lt;li&gt;Alternatively to the previous step, mvn exec:exec can be used to create the default Two-Way SSL keystores and truststores, which will placed in the &lt;strong&gt;target&lt;/strong&gt; directory&lt;/li&gt;&lt;/ol&gt;&lt;h2 id="usage-basics"&gt;Usage Basics&lt;/h2&gt;&lt;p&gt;To use any of the methods in CertificateGenerator, the Builder will first have to be called and use to build and instance of CertificateGenerator. The builder requires a String of the path to the desired output directory to be passed directly into it. After this, the various Builder methods can be used to, optionally, pass in alias(es), distinguished name(s), key password(s), and serial number(s). &lt;strong&gt;Note: while some CertificateGenerator methods can be used without the optional parameters set, such as createKeyStore, all the methods are designed to be used in unison.&lt;/strong&gt;&lt;/p&gt;&lt;h2 id="generating-and-saving-the-keystores-and-truststores-to-file"&gt;Generating and Saving the KeyStores and TrustStores to File&lt;/h2&gt;&lt;p&gt;CertificateGenerator provides two ways for generating KeyStores and TrustStores, the first is using one of two utility methods, &lt;em&gt;generate()&lt;/em&gt; and &lt;em&gt;generateTwoWaySSL()&lt;/em&gt;, while the second way is directly calling the generation methods. In the first case, all parameters can be set using the &lt;em&gt;set()&lt;/em&gt; and &lt;em&gt;add()&lt;/em&gt; methods, both in the Builder and after the CertificateGenerator class is built. Once the CertificateGenerator is built and parameters set, calling the &lt;em&gt;generate()&lt;/em&gt; method will create the authority, create the certificates, create the KeyStore(s) and TrustStore(s), and then save the KeyStore(s) and TrustStore(s) to the output directory.&lt;/p&gt;&lt;h2 id="using-the-default-methods"&gt;Using the Default Methods&lt;/h2&gt;&lt;h3 id="the-generate-method"&gt;The &lt;em&gt;generate()&lt;/em&gt; Method&lt;/h3&gt;&lt;p&gt;To use this method, parameters can be set using the &lt;em&gt;set()&lt;/em&gt; and &lt;em&gt;add()&lt;/em&gt; methods, both in the Builder and after the CertificateGenerator class is built. There must be at least one alias and one distinguished name specified in either the Builder methods or with the CertificateGenerator methods, with all other parameters being optional. Once the CertificateGenerator is built and parameters set, calling the &lt;em&gt;generate()&lt;/em&gt; method will create the authority, create the certificates, create the KeyStore(s) and TrustStore(s), and then save the KeyStore(s) and TrustStore(s) to the output directory. See below for an example on generating a KeyStore containing one certificate, with an alias of âexample-cert-1â and a DN of âCN=example-cert-1â, which will be signed by a Certificate Authority. The Certificate Authority will be a self signed certificate with a DN of âCN=Elytron CA, ST=Elytronâ and will have its certificate as a trusted certificate in a generated TrustStore with an alias of âExample-CAâ. The KeyStore and TrustStore will be saved to an output directory of â/home/elytron/example/â with their respective names being âexample.keystore.jksâ and âexample.truststore.jksâ.&lt;/p&gt;&lt;div class="sourceCode" id="cb1"&gt;&lt;pre class="sourceCode java"&gt;&lt;code class="sourceCode java"&gt;&lt;a class="sourceLine" id="cb1-1" data-line-number="1"&gt;CertificateGenerator generator = &lt;span class="kw"&gt;new&lt;/span&gt; CertificateGenerator.&lt;span class="fu"&gt;Builder&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-2" data-line-number="2"&gt; .&lt;span class="fu"&gt;setOutputLocation&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;/home/elytron/example/&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-3" data-line-number="3"&gt; .&lt;span class="fu"&gt;addAlias&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;example-cert-1&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-4" data-line-number="4"&gt; .&lt;span class="fu"&gt;addDN&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;CN=example-cert-1&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-5" data-line-number="5"&gt; .&lt;span class="fu"&gt;build&lt;/span&gt;();&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-6" data-line-number="6"&gt;generator.&lt;span class="fu"&gt;setAuthorityAlias&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;Example-CA&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-7" data-line-number="7"&gt;generator.&lt;span class="fu"&gt;setAuthorityDN&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;CN=Elytron CA, ST=Elytron&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-8" data-line-number="8"&gt;generator.&lt;span class="fu"&gt;setKeyStoreName&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;example.keystore.jks&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-9" data-line-number="9"&gt;generator.&lt;span class="fu"&gt;setTrustStoreName&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;example.truststore.jks&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb1-10" data-line-number="10"&gt;generator.&lt;span class="fu"&gt;generate&lt;/span&gt;();&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="the-generatetwowayssl-method"&gt;The &lt;em&gt;generateTwoWaySSL()&lt;/em&gt; Method&lt;/h3&gt;&lt;p&gt;This method has the required parameters all set already, but some optional parameters, including key passwords and key size, can be set. Calling it will create three KeyStores and three TrustStores, one for the server and one for each of the clients, client1 and client2, in a given output directly. Each client KeyStore will have one certificate each with a randomly generated serial number. The two certificates will have an alias of client1 and client2 with the distinguished names being, respectively, CN=client1 and CN=client2. The server KeyStore will contain a single certificate, server, that has a randomly generated serial number and a distinguished name of CN=server. All truststores will contain a single trusted certificate, the certificate authority, that is configured with the default authority parameters. See below for an example on using this method, which will create the KeyStores and TrustStores with the above stated defaults in the /home/elytron/example directory.&lt;/p&gt;&lt;div class="sourceCode" id="cb2"&gt;&lt;pre class="sourceCode java"&gt;&lt;code class="sourceCode java"&gt;&lt;a class="sourceLine" id="cb2-1" data-line-number="1"&gt;&lt;span class="kw"&gt;new&lt;/span&gt; CertificateGenerator.&lt;span class="fu"&gt;Builder&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb2-2" data-line-number="2"&gt; .&lt;span class="fu"&gt;setOutputLocation&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;/home/elytron/example/&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb2-3" data-line-number="3"&gt; .&lt;span class="fu"&gt;build&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb2-4" data-line-number="4"&gt; .&lt;span class="fu"&gt;generateTwoWaySSL&lt;/span&gt;();&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="directly-calling-the-methods"&gt;Directly Calling the Methods&lt;/h2&gt;&lt;p&gt;It is possible to use CertificateGenerator to step by step, in the same manner as the default methods use it, in order to create the KeyStores and TrustStores. While it will generally be easier to use the default methods, this way can be useful for the ability to do customize the result. This includes being able to stop part way through generation, for example if the certificates are wanted but not the KeyStores and TrustStores, using custom methods for certain steps, such as creating a certificate authority, or if only some output is wanted, such as only KeyStores.&lt;/p&gt;&lt;h3 id="public-methods"&gt;Public Methods&lt;/h3&gt;&lt;p&gt;The majority of CertificateGeneratorâs methods are public for integration into any Java project, these are listed below. The methods are listed without their arguments (â¦ signifying one or more arguments), more information can be found on the methods in the Javadoc.&lt;/p&gt;&lt;div class="sourceCode" id="cb3"&gt;&lt;pre class="sourceCode java"&gt;&lt;code class="sourceCode java"&gt;&lt;a class="sourceLine" id="cb3-1" data-line-number="1"&gt;&lt;span class="fu"&gt;createAuthority&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-2" data-line-number="2"&gt;&lt;span class="fu"&gt;createSignedCertificates&lt;/span&gt;(...)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-3" data-line-number="3"&gt;&lt;span class="fu"&gt;createKeyStore&lt;/span&gt;(...)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-4" data-line-number="4"&gt;&lt;span class="fu"&gt;createTrustStore&lt;/span&gt;(...)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-5" data-line-number="5"&gt;&lt;span class="fu"&gt;createKeyStoreAndTrustStore&lt;/span&gt;(...)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-6" data-line-number="6"&gt;&lt;span class="fu"&gt;saveKeyStoreToFile&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-7" data-line-number="7"&gt;&lt;span class="fu"&gt;saveTrustStoreToFile&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-8" data-line-number="8"&gt;&lt;span class="fu"&gt;saveKeyStoreAndTrustStoreToFile&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-9" data-line-number="9"&gt;&lt;span class="fu"&gt;createKeyStoreAndSaveToFile&lt;/span&gt;(...)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-10" data-line-number="10"&gt;&lt;span class="fu"&gt;createTrustStoreAndSaveToFile&lt;/span&gt;(...)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb3-11" data-line-number="11"&gt;&lt;span class="fu"&gt;createKeyStoreAndTrustStoreAndSaveToFile&lt;/span&gt;(...)&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="using-the-public-methods"&gt;Using the Public Methods&lt;/h3&gt;&lt;p&gt;In general, the public methods should be used in the order of createAuthority() -&amp;gt; createSignedCertificates(â¦) -&amp;gt; KeyStore and/or TrustStore creation -&amp;gt; KeyStore and/or TrustStore save to file. However, this order is not strict since the only public method depending on any other is saving the KeyStore and/or TrustStore creation to saving. An example of modifying this order can be seen in the generateTwoWaySSL method, where the order is createAuthority() -&amp;gt; createSignedCertificates(â¦) -&amp;gt; KeyStore and TrustStore creation -&amp;gt; KeyStore and TrustStore save to file -&amp;gt; createSignedCertificates() -&amp;gt; KeyStore creation -&amp;gt; KeyStore and TrustStore save to file. As can also be seen in that method, the various public parameters can be modified at any point during the API calls.&lt;/p&gt;&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;&lt;p&gt;This blog post provides some information on the various ways that the new CertificateGenerator utility can be used to both generate KeyStores and TrustStores for examples or to be directly integrated into projects. The post provides some examples for some of the possible ways that the default methods, and through them the public parameters, can be set and modified during creation.&lt;/p&gt;&lt;p&gt;In short, the new tool can be used to quickly create a KeyStore and TrustStore with minimal configuration with:&lt;/p&gt;&lt;div class="sourceCode" id="cb4"&gt;&lt;pre class="sourceCode java"&gt;&lt;code class="sourceCode java"&gt;&lt;a class="sourceLine" id="cb4-1" data-line-number="1"&gt;&lt;span class="kw"&gt;new&lt;/span&gt; CertificateGenerator.&lt;span class="fu"&gt;Builder&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb4-2" data-line-number="2"&gt; .&lt;span class="fu"&gt;addAlias&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;alias1&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb4-3" data-line-number="3"&gt; .&lt;span class="fu"&gt;addDN&lt;/span&gt;(&lt;span class="st"&gt;&amp;quot;CN=dn1&amp;quot;&lt;/span&gt;)&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb4-4" data-line-number="4"&gt; .&lt;span class="fu"&gt;build&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb4-5" data-line-number="5"&gt; .&lt;span class="fu"&gt;generate&lt;/span&gt;();&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alternatively, the tool can be quickly used for creating two-way SSL KeyStores and TrustStores by executing the project with mvn exec:exec or by using the following methods, with the resulting KeyStores and TrustStores placed in the &lt;strong&gt;target&lt;/strong&gt; directory:&lt;/p&gt;&lt;div class="sourceCode" id="cb5"&gt;&lt;pre class="sourceCode java"&gt;&lt;code class="sourceCode java"&gt;&lt;a class="sourceLine" id="cb5-1" data-line-number="1"&gt;&lt;span class="kw"&gt;new&lt;/span&gt; CertificateGenerator.&lt;span class="fu"&gt;Builder&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb5-2" data-line-number="2"&gt; .&lt;span class="fu"&gt;build&lt;/span&gt;()&lt;/a&gt;&lt;br /&gt;&lt;a class="sourceLine" id="cb5-3" data-line-number="3"&gt; .&lt;span class="fu"&gt;generateTwoWaySSL&lt;/span&gt;();&lt;/a&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ADyjZsArsOw" height="1" width="1" alt=""/&gt;</content><summary>dynamically-generating-certificates-keystores-in-elytron Dynamically Generating KeyStores, TrustStores, and Certificates with WildFly Elytron Overview It is now possible to quickly and easily generate KeyStores, TrustStores, and Certificates by utilizing the Elytron Examples methods. A new utility class, CertificateGenerator, has been added that can generate a KeyStore and TrustStore, along with s...</summary><dc:creator>Justin Cook</dc:creator><dc:date>2018-11-16T17:14:00Z</dc:date><feedburner:origLink>https://justinwildfly.blogspot.com/2018/11/dynamically-generating-keystores.html</feedburner:origLink></entry><entry><title>Free Online Java EE Development Course From Red Hat Available Now</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Jw3f9xu8ulA/" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="edx" scheme="searchisko:content:tags" /><category term="Enterprise Java" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="free learning resources" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="MooC" scheme="searchisko:content:tags" /><category term="Red Hat JBoss Developer Studio" scheme="searchisko:content:tags" /><category term="Red Hat JBoss Enterprise Application Platform" scheme="searchisko:content:tags" /><category term="training" scheme="searchisko:content:tags" /><author><name>Zachary Gutterman</name></author><id>searchisko:content:id:jbossorg_blog-free_online_java_ee_development_course_from_red_hat_available_now</id><updated>2018-11-16T16:41:19Z</updated><published>2018-11-16T16:41:19Z</published><content type="html">&lt;p&gt;The Red Hat Training team is pleased to announce the release ofÂ &lt;a href="https://www.edx.org/course/fundamentals-java-ee-development-red-hat-jb083x"&gt;Fundamentals of Java EE Development.&lt;/a&gt;Â This free training is hosted by our partner edX. edX is an open online course provider that now hosts three Red Hat courses, includingÂ &lt;a href="https://www.edx.org/course/fundamentals-red-hat-enterprise-linux-red-hat-rh066x"&gt;Fundamentals of Red Hat Enterprise Linux&lt;/a&gt; and &lt;a href="https://www.edx.org/course/fundamentals-containers-kubernetes-red-hat-do081x"&gt;Fundamentals of Containers, Kubernetes, and Red Hat OpenShift.Â &lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Enterprise Java&lt;/a&gt;Â (Java EE is now known as &lt;a href="https://developers.redhat.com/blog/2018/04/24/jakarta-ee-is-officially-out/"&gt;Jakarta EE)&lt;/a&gt; is one of the most in-demand and marketable programming platforms. With Fundamentals of Java EE Development, students learn the foundational skills needed to develop modern applications. Serving as an introduction to enterprise Java development using &lt;a href="https://developers.redhat.com/products/devstudio/overview/"&gt;Red Hat Developer Studio&lt;/a&gt; and &lt;a href="https://developers.redhat.com/products/eap/overview/"&gt;Red Hat JBoss Enterprise Application Platform&lt;/a&gt;, this course builds on studentsâ Java SE skills to teach the basic concepts behind more advanced topics such as &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt; and cloud-native applications.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/RqvxmV377dQ?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-535097"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;In this course, veteran instructor Will Dinyes guides students through enterprise Java development with easy-to-follow lectures and demonstrations. In addition, students are guided through transforming a simple Java SE command line application into an enterprise application. The final application includes various Java EE specifications, including Enterprise Java Beans, Java Persistence API, and JAX-RS for REST services.&lt;/p&gt; &lt;p&gt;This free course is based on our full-length Java EE Development course &lt;a href="https://www.redhat.com/en/services/training/jb183-red-hat-application-development-i-programming-java-ee"&gt;Red Hat Application Development I: Programming in Java EE (JB183)&lt;/a&gt;. If you are interested in learning more about that course, visit &lt;a href="https://www.redhat.com/en/services/training/learning-subscription"&gt;Red Hat Learning Subscription&lt;/a&gt; or &lt;a href="mailto:zgutterm@redhat.com"&gt;contact me&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#38;linkname=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Ffree-online-java-ee-development-course-from-red-hat-available-now%2F&amp;#038;title=Free%20Online%20Java%20EE%20Development%20Course%20From%20Red%20Hat%20Available%20Now" data-a2a-url="https://developers.redhat.com/blog/2018/11/16/free-online-java-ee-development-course-from-red-hat-available-now/" data-a2a-title="Free Online Java EE Development Course From Red Hat Available Now"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/16/free-online-java-ee-development-course-from-red-hat-available-now/"&gt;Free Online Java EE Development Course From Red Hat Available Now&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Jw3f9xu8ulA" height="1" width="1" alt=""/&gt;</content><summary>The Red Hat Training team is pleased to announce the release ofÂ Fundamentals of Java EE Development.Â This free training is hosted by our partner edX. edX is an open online course provider that now hosts three Red Hat courses, includingÂ Fundamentals of Red Hat Enterprise Linux and Fundamentals of Containers, Kubernetes, and Red Hat OpenShift.Â  Enterprise JavaÂ (Java EE is now known as Jakarta EE) is...</summary><dc:creator>Zachary Gutterman</dc:creator><dc:date>2018-11-16T16:41:19Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/16/free-online-java-ee-development-course-from-red-hat-available-now/</feedburner:origLink></entry><entry><title>Microcontainers for Unit Testing</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/sMAGi3wUFFM/" /><category term="community" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="glibc" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="test automation" scheme="searchisko:content:tags" /><category term="testing" scheme="searchisko:content:tags" /><author><name>DJ Delorie</name></author><id>searchisko:content:id:jbossorg_blog-microcontainers_for_unit_testing</id><updated>2018-11-16T16:19:01Z</updated><published>2018-11-16T16:19:01Z</published><content type="html">&lt;p&gt;When you write a program, you have to test it. Run, program, run! Did it do what you expected? Yay! Maybe you&amp;#8217;ll even set up a testsuite to run it many times, just to be sure. You might even create some sample files for it to work with.&lt;/p&gt; &lt;p&gt;What do you do when your &amp;#8220;program&amp;#8221; is your whole system? You can&amp;#8217;t just change your &lt;tt&gt;/etc&lt;/tt&gt; config files just to test your new program, but that&amp;#8217;s exactly what you have to do when your &amp;#8220;program&amp;#8221; is the core C library, glibc. You can&amp;#8217;t even update the library easily, as the commands you use to update it (&lt;tt&gt;cp&lt;/tt&gt;, &lt;tt&gt;mv&lt;/tt&gt;) themselves rely on the library!&lt;/p&gt; &lt;p&gt;One option for this is to have a separate machine (real or virtual) set aside for testing. Still, installing a newly built glibc and automating tests on a remote machine is not a trivial task. Currently, most glibc testing is done in the &amp;#8220;build directory&amp;#8221; &amp;#8211; an uninstalled glibc is tested, with options and hacks to force it to use its own support files and configuration. This, however, has some drawbacks. Consider this code flow:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-534077 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-1.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-1.png" alt="" width="730" height="276" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-1.png 730w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-1-300x113.png 300w" sizes="(max-width: 730px) 100vw, 730px" /&gt;&lt;/p&gt; &lt;p&gt;When testing a non-installed glibc, you can test the &amp;#8220;User API&amp;#8221; portion of glibc&amp;#8217;s code, but you can&amp;#8217;t test the &amp;#8220;System API&amp;#8221; portion because it&amp;#8217;s bypassed &amp;#8211; you end up only testing the &amp;#8220;Test API&amp;#8221; code, which is a waste of time as it will never get used by a real application. Ideally, we&amp;#8217;d use the &amp;#8220;System API&amp;#8221; code for testing as well, but how?&lt;/p&gt; &lt;h2&gt;Enter the Microcontainer&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;Linux Containers&lt;/a&gt; allow you to have a &amp;#8220;system&amp;#8221; that&amp;#8217;s just a subdirectory in your filesystem. Normally this subdirectory would be its own block device, with a full OS on it, managed by some high level software like Kubernetes or Docker. In our case, though, we only need &amp;#8220;just enough&amp;#8221; of a container to test glibc. Conveniently, glibc is at the core of the operating system, and has almost no dependencies. So, we can &amp;#8220;install&amp;#8221; glibc into an empty directory and consider that directory to be a container. We also only need the smallest amount of &amp;#8220;containerizing&amp;#8221; code as possible, making this the smallest implementation of a container. Hence, a microcontainer.&lt;/p&gt; &lt;p&gt;In glibc 2.28 I extended the testsuite&amp;#8217;s infrastructure to support such a microcontainer via a support program called &lt;tt&gt;test-container&lt;/tt&gt;. The build system pre-installs a copy of glibc into an empty subdirectory, and &lt;tt&gt;test-container&lt;/tt&gt; runs each test within that container. There are a few dummy programs we include that aren&amp;#8217;t part of glibc, like &lt;tt&gt;/bin/sh&lt;/tt&gt; and &lt;tt&gt;/bin/echo&lt;/tt&gt;, but since the container has its own filesystem the test now looks like this:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-534087 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-2.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-2.png" alt="" width="515" height="132" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-2.png 515w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/code-flow-2-300x77.png 300w" sizes="(max-width: 515px) 100vw, 515px" /&gt;&lt;/p&gt; &lt;p&gt;As you can see, the code path is simpler, and is the same path that real applications will use. The test-container program is able to isolate the test by giving it its own PID, UID, and filesystem namespaces. Each test that needs to run in a container may provide a skeleton set of files to install (like &lt;tt&gt;/etc/hosts&lt;/tt&gt;) and/or commands to run (i.e. to &lt;tt&gt;chmod /etc/hosts&lt;/tt&gt;) and the container is cleaned up between tests. Thus, the test may run as root, install &amp;#8220;system&amp;#8221; files, corrupt the environment, or whatever else it needs to do to test glibc.&lt;/p&gt; &lt;h2&gt;The Benefits&lt;/h2&gt; &lt;p&gt;Besides the obvious &amp;#8220;more tests&amp;#8221;, this new feature also allows tests that would normally be run outside of glibc&amp;#8217;s testsuite to be migrated into it. A test that might have been run, say, by a QA department just prior to shipping a product with glibc in it, can now be run months if not years earlier by the glibc developers themselves. Tests also become less expensive to run if they previously required manual intervention, or the provisioning of an entire virtual machine. All this means that problems get found quickly, typically by the upstream developer working on that code, when the new code is fresh in their mind. This leads to a better upstream, which benefits all glibc users.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#38;linkname=Microcontainers%20for%20Unit%20Testing" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F16%2Fmicrocontainers-for-unit-testing%2F&amp;#038;title=Microcontainers%20for%20Unit%20Testing" data-a2a-url="https://developers.redhat.com/blog/2018/11/16/microcontainers-for-unit-testing/" data-a2a-title="Microcontainers for Unit Testing"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/16/microcontainers-for-unit-testing/"&gt;Microcontainers for Unit Testing&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/sMAGi3wUFFM" height="1" width="1" alt=""/&gt;</content><summary>When you write a program, you have to test it. Run, program, run! Did it do what you expected? Yay! Maybe youâll even set up a testsuite to run it many times, just to be sure. You might even create some sample files for it to work with. What do you do when your âprogramâ is your whole system? You canât just change your /etc config files just to test your new program, but thatâs exactly what you ha...</summary><dc:creator>DJ Delorie</dc:creator><dc:date>2018-11-16T16:19:01Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/16/microcontainers-for-unit-testing/</feedburner:origLink></entry><entry><title>jBPM empowered by Camel to integrate with ... everything!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ICQcSwnkrmA/jbpm-empowered-by-camel-to-integrate.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Maciej Swiderski</name></author><id>searchisko:content:id:jbossorg_blog-jbpm_empowered_by_camel_to_integrate_with_everything</id><updated>2018-11-16T13:55:58Z</updated><published>2018-11-16T13:55:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Apache Camel is extremely powerful integration library, comes with hundreds of components to integrate with 3rd party systems. jBPM on the other hand provides great support for business processes and cases. In many situations data produced by jBPM is required to be pushed to external systems or business processes would need to be informed about changes in external systems that can influence business logic.&lt;br /&gt;&lt;br /&gt;So why not combine these two and provide state of the art business solution that can focus on business goals and yet integrate with pretty much anything in the world.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Improved camel-jbpm component&lt;/h3&gt;&lt;div&gt;camel-jbpm component has been added in 2.6 version of Camel. At that time it was based on jBPM 6.5 and provided only producer based on kie-remote-client that interacts with jBPM console (aka workbench) REST api. It's been a while since then and even more important jBPM Console REST api for execution does not exists any more and same applies for kie-remote-client. It has been replaced completely with way more powerful kie server client.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So it was high time to improve the camel-jbpm component to first of all upgrade to latest version (7.14) and replace use of kie-remote-client with kie-server-client for producer usage. And to provide consumer support as well that will enable simple integration with outside world for pushing out data from jBPM.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So when it comes to consumer of camel-jbpm component users can now take advantage of following integrations of jBPM empowered by Camel&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;ProcessEventListeners&lt;/li&gt;&lt;li&gt;TaskLifeCycleEventListeners&lt;/li&gt;&lt;li&gt;CaseEventListeners&lt;/li&gt;&lt;li&gt;EventEmitter&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;All of these can be easily configured as Camel routes, here is a simple example that will be triggered upon process events being generated by jBPM&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;pre class="brush:xml"&gt;&amp;lt;routes xmlns="http://camel.apache.org/schema/spring"&amp;gt;&lt;br /&gt; &amp;lt;route id="processes"&amp;gt;&lt;br /&gt; &amp;lt;from uri="jbpm:events:process"/&amp;gt;&lt;br /&gt; &amp;lt;filter&amp;gt;&lt;br /&gt; &amp;lt;simple&amp;gt;${in.header.EventType} == 'beforeProcessStarted'&amp;lt;/simple&amp;gt;&lt;br /&gt; &amp;lt;to uri="log:kjar.processes?level=INFO&amp;amp;amp;showBody=true&amp;amp;amp;showHeaders=true"/&amp;gt;&lt;br /&gt; &amp;lt;/filter&amp;gt;&lt;br /&gt; &amp;lt;/route&amp;gt;&lt;br /&gt;&amp;lt;/routes&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;as you can see as soon as there will be events produced on the &lt;b&gt;jbpm:events:processes&lt;/b&gt; a new exchange will be processed that will simply go over filter and get only &lt;b&gt;beforeProcessStarted&lt;/b&gt; events (each event type is set as header) and the body is actual event produced by jBPM.&lt;br /&gt;&lt;br /&gt;&lt;i&gt;NOTE: if you need more than one on the same consumer type you should suffix it with sort of classifier to make the endpoints unique&lt;/i&gt; &lt;b&gt;jbpm:events:process:startedOnly&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Similar endpoints can be used for user tasks and cases&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;jbpm:events:tasks&lt;/li&gt;&lt;li&gt;jbpm:events:cases&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Configure routes&lt;/h3&gt;&lt;div&gt;Routes can be configured either on application level (kie server or business app) or kjar level.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;camel-jbpm component comes with KIE server extension that will be automatically registered in KIE Server when the jar file is present - see Installation section for more details on it.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Global routes should be created in the root of the application class path (kie-server.war/WEB-INF/classes) in a file name global-camel-routes.xml&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Such global routes will apply to all deployed kjars in KIE Server.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;KJAR specific routes can also be used by placing camel-routes.xml file in the root of kjar class path (src/main/resources folder of the kjar source). When such file is found new (kjar scoped) CamelContext is created with all routes defined in that file. These routes will only apply to that specific KIE Container.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Installation&lt;/h3&gt;&lt;div&gt;Installation is really simple, it requires to drop two jar files into kie-server.war/WEB-INF/lib&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;camel-core&lt;/li&gt;&lt;li&gt;camel-jbpm&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;and that's it, start the server and you will see that Camel KIE Server extensions boots and does its thing :)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;In case you would like to use another component to interact with, you need to do the same, drop the component jar file and its runtime dependencies. For the sake of example we use camel-kafka that requires these jar files to be placed in kie-server.war/WEB-INF/lib&lt;/div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;camel-kafka-2.19.0.jar&lt;/li&gt;&lt;li&gt;kafka-clients-0.10.2.0.jar&lt;/li&gt;&lt;li&gt;lz4-1.3.0.jar&lt;/li&gt;&lt;li&gt;snappy-java-1.1.2.6.jar&lt;/li&gt;&lt;/ul&gt;NOTE: Make sure to use camel-kafka and kafka-clients matching your Kafka cluster.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Example&lt;/h3&gt;&lt;div&gt;A simple use case to illustrate is to take advantage of the camel-jbpm consumer to react to events produced by jBPM for both tasks and processes&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;for tasks we just log them to console&lt;/li&gt;&lt;li&gt;for processes we push them out to Kafka&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;here is the camel-routes.xml for this example&lt;/div&gt;&lt;/div&gt;&lt;pre class="brush:xml"&gt;&amp;lt;routes xmlns="http://camel.apache.org/schema/spring"&amp;gt; &lt;br /&gt; &amp;lt;route id="processes"&amp;gt;&lt;br /&gt; &amp;lt;from uri="jbpm:events:process:test"/&amp;gt;&lt;br /&gt; &amp;lt;filter&amp;gt;&lt;br /&gt; &amp;lt;simple&amp;gt;${in.header.EventType} starts with 'before'&amp;lt;/simple&amp;gt;&lt;br /&gt; &amp;lt;transform&amp;gt;&lt;br /&gt; &amp;lt;simple&amp;gt;${in.header.EventType} for process instance ${body.processInstance.id}&amp;lt;/simple&amp;gt;&lt;br /&gt; &amp;lt;/transform&amp;gt;&lt;br /&gt; &amp;lt;to uri="kafka:TestLog?brokers=localhost:9092"/&amp;gt;&lt;br /&gt; &amp;lt;/filter&amp;gt;&lt;br /&gt; &amp;lt;/route&amp;gt;&lt;br /&gt; &lt;br /&gt; &amp;lt;route id="tasks"&amp;gt;&lt;br /&gt; &amp;lt;from uri="jbpm:events:task:test"/&amp;gt;&lt;br /&gt; &amp;lt;filter&amp;gt;&lt;br /&gt; &amp;lt;simple&amp;gt;${in.header.EventType} starts with 'before'&amp;lt;/simple&amp;gt;&lt;br /&gt; &amp;lt;to uri="log:kjar.tasks?level=INFO&amp;amp;amp;showBody=true&amp;amp;amp;showHeaders=true"/&amp;gt;&lt;br /&gt; &amp;lt;/filter&amp;gt;&lt;br /&gt; &amp;lt;/route&amp;gt;&lt;br /&gt;&amp;lt;/routes&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;and here is just a short screencast showing this in action&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/NUM7KhSDBQM" width="560"&gt;&lt;/iframe&gt; &lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;b&gt;IMPORTANT: This improved camel-jbpm component is not yet released, it will go out with Apache Camel 2.23.0 release that is expected to be out in couple of days from now. So prepare yourself and make sure to give it a go.&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ICQcSwnkrmA" height="1" width="1" alt=""/&gt;</content><summary>Apache Camel is extremely powerful integration library, comes with hundreds of components to integrate with 3rd party systems. jBPM on the other hand provides great support for business processes and cases. In many situations data produced by jBPM is required to be pushed to external systems or business processes would need to be informed about changes in external systems that can influence busine...</summary><dc:creator>Maciej Swiderski</dc:creator><dc:date>2018-11-16T13:55:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/11/jbpm-empowered-by-camel-to-integrate.html</feedburner:origLink></entry><entry><title>What Can Blockchain Projects Learn from Open Source?</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/MRJlvgH5lZ4/what-can-blockchain-projects-learn-from.html" /><category term="Blockchain" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="open source" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-what_can_blockchain_projects_learn_from_open_source</id><updated>2018-11-16T11:28:48Z</updated><published>2018-11-16T11:28:00Z</published><content type="html">I've been involved with open source over a decade now. I've been part of small projects with innovative ideas which grew into large projects with solid communities. I've also witnessed how dysfunctional communities can suck the energy of projects for years. All that thanks to the open source development and collaboration.&lt;br /&gt;In recent times, I'm active on the blockchain space as well: reading, &lt;a href="https://opensource.com/article/18/8/open-source-tokenomics" target="_blank"&gt;writing&lt;/a&gt;, and contributing to projects. And I came to the conclusion that &lt;b&gt;blockchain projects are startups with open development and open business models&lt;/b&gt;. And to be successful, the first and foremost, blockchain startups have to learn how to build communities the open source way.&lt;br /&gt;&lt;h3&gt;Open source code&lt;/h3&gt;One of the fundamental premises of blockchain is decentralization and giving control and data back to the user. Such decentralization cannot be achieved without transparency and openness. If the source code is closed, that is no different to the centralized closed systems of today. Without making the code open, there is no way to read and confirm that a system is doing what it is promising to do. There are projects that are trying to avoid it, but even they recognize that the code has to be open to a certain level at a minimum. For example, Hedera Hashgraph (which is technically not a blockchain project, but a similar class of software) has said the code cannot be freely distributed (forked), but it will be &lt;a href="https://www.hedera.com/faq#is-the-source-code-open-source"&gt;open for review&lt;/a&gt;.&lt;b&gt; &lt;/b&gt;That proves our premise:&lt;b&gt; blockchain projects, first and foremost are open source projects.&lt;/b&gt; Whether this can be classified as open source according to "The Open Source Initiative" is not in the scope of this article. The point is, if the source code is not readable/verifiable, there is no point in having something run on a non-trusted blockchain platform.&lt;br /&gt;&lt;h3&gt;Open runtime&lt;/h3&gt;In addition to the source being open, what differentiates blockchain from non-blockchain open source projects is that fact that for the first the runtime is open as well. An open source project can be developed in the open, but then run and consumed as an open core, as a service, or as part of a closed system. Public blockchain (not looking into private ones here) are permissionless, anyone can join and leave a network, anyone can run a node or two. It represents a trustless and borderless runtime with open governance.&lt;br /&gt;&lt;h3&gt;Open data&lt;/h3&gt;Another distinct aspect of blockchain is that blockchain projects in addition to the open source code, open runtime, also have open data. Anyone can fork the code (the client application), fork the data&amp;nbsp; (the blockchain history) and start a new network.&lt;b&gt; That ultimately makes blockchain projects the most open software systems ever existed&lt;/b&gt;. Open code, open data, open runtime, open business model, ensure openness in multiple dimensions.&lt;br /&gt;&lt;h3&gt;Open business model&lt;/h3&gt;Blockchain startups are a very unique mix of open source development, and open value capture models, all blended into one at source code level. While a non-blockchain based open source project is typically used for &lt;a href="https://medium.com/open-consensus/5-creating-oss-value-capturing-oss-value-part-ii-8498e6453d0b" target="_blank"&gt;creating value&lt;/a&gt; through collaborative development and open adoption, capturing value happens through a separate business model. The business model can be thought in advance or defined later such as SaaS, open core, subscription, etc. With the blockchain projects, the business model is described in a white paper, and the token model capturing value is implemented in the source code in advance. All that makes &lt;b&gt;blockchain projects a unique blend of value creation and instant capture and distribution&lt;/b&gt;.&lt;br /&gt;&lt;h3&gt;Why be so open?&lt;/h3&gt;Most of the blockchain projects are aiming to become some kind of platform or a hub with open standards and protocols that will attract and be adopted by the developers and consumed by users subsequently. The primary way these platforms and protocols attract developers is not through technical superiority over non-blockchain technology, but by the unique decentralization, characteristics achieved through openness in multiple dimensions. These platforms have to be open in order to become more attractive than the existing closed systems which already have all the developers and users on them. &lt;b&gt;Being open is not only a prerequisite for its transparency, but also for its distribution and adoption. &lt;/b&gt;That is especially valid for projects which are aimed to be consumed as a platform or protocol by developers rather than end users. Open source is the primary way for developers to explore, learn and start using a project.&lt;br /&gt;&lt;h3&gt;Isn't "open" a weakness?&lt;/h3&gt;There was a time when being open source was considered a dangerous act as a competitor could copy and steal the code or the ideas. The recent times proved that being open source is the primary way for developer adoption, especially for developer-centric platforms, tools, and libraries. But as we have seen above, blockchain is also open runtime and open data as well. Which means anybody can fork the code and the data and start a parallel network. That makes a project vulnerable to even more kinds of splits/forks and value grab. And we have seen this happened many times with the forks of the most popular blockchain networks such as Bitcoin and Ethereum. Yet, these projects are performing better than projects which are looking for ways to prevent forking but also lack the ability to attract followers. That is because being open is actually a sign of strength. If a network is so open and has survived forks and attacks, it makes its community only stronger.&lt;br /&gt;We can observe the act of being open not only in projects, but also people and organizations. Today, people and organization rush into sharing and showing off their knowledge through open source code, conference talks, blogging, tweeting, etc. The innovation is happening so fast in certain areas that by the time somebody can understand and copy an idea, the inventor of the idea will have created the next one. And being a copycat in a winner takes all markets has a negative networking effect on community growth.&lt;b&gt; In the journey to conquer the closed and centralized systems, being open is the primary weapon.&lt;/b&gt; &lt;br /&gt;&lt;h3&gt;Hype is different than a community&lt;/h3&gt;I've seen many times, how successful Initial Coin Offering (&lt;a href="https://en.wikipedia.org/wiki/Initial_coin_offering" target="_blank"&gt;ICO&lt;/a&gt;) investors measure hype around a project for an early investment. Typically such a measure works only when the early investment is accompanied by an early exit. In practical terms that means identifying the most hyped ICO, and selling all tokens as soon as it hits an exchange. Measuring such a hype is done by simple statistics around Twitter followers, Facebook followers, Reddit subscribers, Telegram users, etc. These metrics have a little value for measuring a community strength for the following reasons:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Metrics are artificially inflated with fake accounts, paid followers, subscribers, etc;&lt;/li&gt;&lt;li&gt;The ICOs themselves run &lt;a href="https://en.wikipedia.org/wiki/Airdrop_(cryptocurrency)" target="_blank"&gt;airdrops&lt;/a&gt; campaigns and distribute tokens for following, subscribing, joining, etc;&lt;/li&gt;&lt;li&gt;&lt;b&gt;These are the wrong metrics for measuring a developer-centric community;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;What I mean by the latter is that an open source project that is going to be used by developers (as a platform, protocol, whatever) should measure developer activity, rather than airdrop hunter activities. None of the actions mentioned above are building stickiness in a project community. In fact, all of these activities are purposefully skewing the community metrics using temporary incentives.&lt;br /&gt;&lt;h3&gt;Community over market cap&lt;/h3&gt;The Apache Software Foundation (&lt;a href="https://www.apache.org/" target="_blank"&gt;ASF&lt;/a&gt;) is one of the biggest and oldest software foundations, home of hundreds of popular open source projects. And there, we (I'm a member, committer, and PMC there) have a very fundamental belief that says: &lt;b&gt;"&lt;a href="https://blogs.apache.org/foundation/entry/asf_15_community_over_code" target="_blank"&gt;Community over Code&lt;/a&gt;"&lt;/b&gt;. As a software foundation, we are all about code, and wouldn't have a reason for existing without the code, but this slogan actually codifies how we do things, and how we go about decision making. ASF is first a home for communities rather than a repository for code. The code is the by-product of a good and healthy community. And we first try to grow healthy communities united around projects.&lt;br /&gt;&lt;br /&gt;If we look for example how an ASF project measures its quarterly activity and progress, that is by the number of mailing list subscribers, emails sent, issues opened/closed, pull requests created/merged, software releases done, committers and PMCs voted for. The last one is a very important long term indicator for the health of a project measuring the ultimate level of commitment of community members to the success of the projects. If you look at these metrics, these are all about activities performed by technical people rather than temporarily incentivised airdrop hunters. These activities are harder to fake as they require doing something for the project (usually consuming brain power and time) rather than clicking a like/follow button which easier to outsource.&lt;br /&gt;&lt;br /&gt;A blockchain project has a more complex ecosystem than an open source project alone. There are developers, but also miners (or their equivalent for running the network), investors, and eventually users. Measuring only the developer activity won't be indicative enough for the full ecosystem, but focusing on the right metrics would be a good start.&lt;br /&gt;In a similar spirit to the ASF's "Community over Code", I think the cryptocurrencies would benefit from "Community over Market Cap". &lt;b&gt;A healthy community is a far more important long-term measure than a temporary large market cap.&lt;/b&gt; The price of a token/coin and its market cap can be artificially manipulated or temporarily affected by a bear market. A strong and healthy community can &lt;a href="https://en.wikipedia.org/wiki/Hodl" target="_blank"&gt;hodl&lt;/a&gt; and survive ups and downs. An unhealthy community, without any stickiness to the project would fall apart anyway.&lt;br /&gt;&lt;h3&gt;Building communities the blockchain way&lt;/h3&gt;Are there good examples of building stickiness and community around the new blockchain projects? I have seen a few projects that have recognized the importance of the community from the very beginning and approached their token sale completely uniquely. These projects aimed to familiarizing the prospective early investors with the project goals, white paper, mission and not only ask for money. There are definitely more examples, but the projects with unique token sale processes I have seen are the following.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://dfinity.org/"&gt;DFINITY&lt;/a&gt; project had a registration process that cost close to 10$. Then they gave that money back in the form of a swag and a free t-shirt. But it was a good method to get rid of the people who are there only for the noise and not even willing to commit 10 bucks.&lt;/li&gt;&lt;li&gt;&lt;a href="https://quarkchain.io/"&gt;QuarkChain&lt;/a&gt; ICO process had &lt;a href="https://quarkchain.io/docs/quiz-answer.pdf"&gt;quiz&lt;/a&gt; with 25 not very simple questions. In order to join the token sale, one had to be part of their telegram channel from early days + have a good score on the quiz + pass the lottery. While the lottery and telegram channel components were already present in other ICOs at the time, the quiz actually forced candidates to find the answers in a short time, and learn about the project (that led to a blackmarket of quiz answers, but it was a nice attempt the least).&lt;/li&gt;&lt;li&gt;One of the best executions of community building during ICO phase has been of &lt;a href="http://mainframe.com/"&gt;Mainframe&lt;/a&gt;. Mainframe run three &lt;a href="https://blog.mainframe.com/three-million-dollars-53ccc72f3444"&gt;crowdgift&lt;/a&gt; campaigns:&lt;/li&gt;&lt;/ul&gt;&lt;ul style="margin-left: 40px;"&gt;&lt;li&gt;Proof of Being - where tokens where literally physically dropped from the air in certain locations around the world. To get tokens, one had to get to the meetup, meet the team and grab some tokens.&lt;/li&gt;&lt;li&gt;Proof of Freedom - where participants had to answer the question why Mainframe mission mattered to them, and submit the answers in any form: tweet, blog post, audio, video, drawing, etc. I also took part in it by writing a blog &lt;a href="https://medium.com/@bibryam/spreading-freedom-with-mainframe-34a15afecf45"&gt;post&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Proof of Heart - where participants were asked to donate Ether which then went to a few non-profit organizations. &lt;/li&gt;&lt;/ul&gt;&lt;div style="margin-left: 40px;"&gt;We can see how Mainframe used three different methods (each with its pros and cons) to build stickiness, awareness and community around its project and even managed to raise money for non-profit organizations.&lt;br /&gt;&lt;/div&gt;Blockchain projects are especially sensitive to &lt;a href="https://en.wikipedia.org/wiki/Metcalfe%27s_law"&gt;Metcalfe's law&lt;/a&gt; and their value is directly proportional to the size of its community. A token not used by anybody is worth nothing. A platform without developers is a zombi platform. Building a community around the crypto project is as important as building the platform itself, if not more. While the crypto world knows how to raise money, the open source world knows how to build communities. They can learn something from each other.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;i&gt;Follow me on&lt;a class="markup--anchor markup--p-anchor" data-href="http://twitter.com/bibryam" href="http://twitter.com/bibryam" rel="noopener nofollow nofollow noopener" target="_blank"&gt; twitter&lt;/a&gt; for other posts in this space. A shorter version of this post was originally published on &lt;a href="https://opensource.com/article/18/11/what-blockchain-can-learn-open-source" target="_blank"&gt;Opensource.com&lt;/a&gt; under CC BY-SA 4.0. &lt;/i&gt;&lt;/span&gt;&lt;i&gt;If you prefer, read the same post on &lt;a href="https://medium.com/@bibryam/what-can-blockchain-projects-learn-from-open-source-5177e36e8b11" target="_blank"&gt;Medium&lt;/a&gt;.&lt;/i&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/MRJlvgH5lZ4" height="1" width="1" alt=""/&gt;</content><summary>I've been involved with open source over a decade now. I've been part of small projects with innovative ideas which grew into large projects with solid communities. I've also witnessed how dysfunctional communities can suck the energy of projects for years. All that thanks to the open source development and collaboration. In recent times, I'm active on the blockchain space as well: reading, writin...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2018-11-16T11:28:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2018/11/what-can-blockchain-projects-learn-from.html</feedburner:origLink></entry><entry><title>Implement your own form renderer for KIE Server</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/S4O878TtTjI/implement-your-own-form-renderer-for.html" /><category term="custom_form_renderer" scheme="searchisko:content:tags" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><category term="form_renderer" scheme="searchisko:content:tags" /><category term="jbpm_forms" scheme="searchisko:content:tags" /><category term="kie_server_forms" scheme="searchisko:content:tags" /><author><name>Maciej Swiderski</name></author><id>searchisko:content:id:jbossorg_blog-implement_your_own_form_renderer_for_kie_server</id><updated>2018-11-16T08:57:53Z</updated><published>2018-11-16T08:57:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;As it was described in &lt;a href="http://mswiderski.blogspot.com/2018/10/lets-embed-forms-rendered-by-kie-server.html"&gt;this article&lt;/a&gt;, KIE Server now provides form renderers for process and task forms built in jBPM Console (aka workbench). Out of the box there are two renderers provided&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;based on PatterFly to provide same look and feel as entire jBPM tooling - it's the default renderer&lt;/li&gt;&lt;li&gt;based on Bootstrap to provide a simple alternative that utilises well established framework for building web and mobile UIs&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;This obviously won't cover all possible needs of users and thus the renderers are actually pluggable. In this article we build a custom one from scratch to illustrate what it takes to have your own.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Create project with dependencies&lt;/h3&gt;&lt;div&gt;First of all, a new maven project needs to be created. It should be most basic project with packaging jar. Then let's add required dependencies to pom.xml&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;pre class="brush:xml"&gt;&amp;lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&amp;gt;&lt;br /&gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&lt;br /&gt; &amp;lt;groupId&amp;gt;org.kie.server.samples&amp;lt;/groupId&amp;gt;&lt;br /&gt; &amp;lt;artifactId&amp;gt;custom-form-renderer&amp;lt;/artifactId&amp;gt;&lt;br /&gt; &amp;lt;version&amp;gt;1.0.0&amp;lt;/version&amp;gt;&lt;br /&gt; &amp;lt;name&amp;gt;Custom Form Renderer&amp;lt;/name&amp;gt;&lt;br /&gt; &lt;br /&gt; &amp;lt;properties&amp;gt;&lt;br /&gt; &amp;lt;version.org.kie&amp;gt;7.14.0.Final&amp;lt;/version.org.kie&amp;gt;&lt;br /&gt; &amp;lt;/properties&amp;gt;&lt;br /&gt; &lt;br /&gt; &amp;lt;dependencies&amp;gt;&lt;br /&gt; &amp;lt;dependency&amp;gt;&lt;br /&gt; &amp;lt;groupId&amp;gt;org.kie.server&amp;lt;/groupId&amp;gt;&lt;br /&gt; &amp;lt;artifactId&amp;gt;kie-server-services-jbpm-ui&amp;lt;/artifactId&amp;gt;&lt;br /&gt; &amp;lt;version&amp;gt;${version.org.kie}&amp;lt;/version&amp;gt;&lt;br /&gt; &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;&lt;br /&gt; &amp;lt;/dependency&amp;gt;&lt;br /&gt; &amp;lt;/dependencies&amp;gt;&lt;br /&gt;&amp;lt;/project&amp;gt;&lt;br /&gt;&lt;/pre&gt;&lt;pre class="brush:xml"&gt;&lt;/pre&gt;&lt;h3 style="text-align: left;"&gt;Create configuration folders&lt;/h3&gt;Create folders in the project that will configure the renderer - all should be done src/main/resources&lt;br /&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;form-templates-providers&lt;/span&gt; - folder that will contain templates, css and java script files used to render the form&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;META-INF/services/org.kie.server.services.jbpm.ui.form.render.FormRenderer&lt;/span&gt; - an empty file that will be used as discovery mechanism to find and register the renderer - it will be edited a bit later to provide actual implementation details&lt;/li&gt;&lt;/ul&gt;&lt;h3 style="text-align: left;"&gt;Create form renderer implementation&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;In src/main/java create a class (e.g. org.kie.server.samples.CustomFormRenderer) that will extend&amp;nbsp;&lt;span style="font-family: &amp;quot;menlo&amp;quot;; font-size: 12px;"&gt;org.kie.server.services.jbpm.ui.form.render.AbstractFormRenderer&lt;/span&gt;&amp;nbsp;and implement the required methods&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;b&gt;getName&lt;/b&gt; - provide the name of the template that shall be used as reference when rendering&lt;/li&gt;&lt;li&gt;&lt;b&gt;loadTemplates&lt;/b&gt; - main implementation that loads different types of templates to be used by renderer&lt;/li&gt;&lt;li&gt;default constructor&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;i&gt;IMPORTANT: this new class must be configured as the implementation of the renderer so add its fully qualified class name into&amp;nbsp;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&lt;i&gt;META-INF/services/org.kie.server.services.jbpm.ui.form.render.FormRenderer&lt;/i&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;There are several types of templates that renderer must provide (and load on startup)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;b&gt;master&lt;/b&gt; - main template that builds the HTML page&lt;/li&gt;&lt;li&gt;&lt;b&gt;header&lt;/b&gt; - header template that creates header of the form&lt;/li&gt;&lt;li&gt;&lt;b&gt;form-group &lt;/b&gt;- form input fields template&lt;/li&gt;&lt;li&gt;&lt;b&gt;case-layout&lt;/b&gt; - layout for case forms&lt;/li&gt;&lt;li&gt;&lt;b&gt;process-layout&lt;/b&gt; - layout for process forms&lt;/li&gt;&lt;li&gt;&lt;b&gt;task-layout&lt;/b&gt; - layout for user task forms&lt;/li&gt;&lt;li&gt;&lt;b&gt;table&lt;/b&gt; - table to be build for multi subforms&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;The easiest way is to base your customisation on top of the out of the box templates (either patternfly or bootstrap). In this example I will use bootstrap templates that can be found &lt;a href="https://github.com/kiegroup/droolsjbpm-integration/tree/master/kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/resources/form-templates-providers/bootstrap"&gt;here&lt;/a&gt;.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Copy all resources from the linked directory into&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;src/main/resources/form-templates-providers/custom&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;and then implement the loadTemplates method of the CustomFormRenderer class&lt;/div&gt;&lt;pre class="brush:java"&gt;package org.kie.server.samples;&lt;br /&gt;&lt;br /&gt;import org.kie.server.services.jbpm.ui.form.render.AbstractFormRenderer;&lt;br /&gt;import org.slf4j.Logger;&lt;br /&gt;import org.slf4j.LoggerFactory;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;public class CustomFormRenderer extends AbstractFormRenderer {&lt;br /&gt; &lt;br /&gt; private static final Logger logger = LoggerFactory.getLogger(CustomFormRenderer.class);&lt;br /&gt;&lt;br /&gt; public CustomFormRenderer() {&lt;br /&gt; super(null, null);&lt;br /&gt; }&lt;br /&gt; &lt;br /&gt; public CustomFormRenderer(String serverPath, String resources) {&lt;br /&gt; super(serverPath, resources);&lt;br /&gt; }&lt;br /&gt; &lt;br /&gt; public String getName() {&lt;br /&gt; return "custom";&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; @Override&lt;br /&gt; protected void loadTemplates() {&lt;br /&gt; loadTemplate(MASTER_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/master-template.html"));&lt;br /&gt; loadTemplate(PROCESS_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/process-layout-template.html"));&lt;br /&gt; loadTemplate(TASK_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/task-layout-template.html"));&lt;br /&gt; loadTemplate(FORM_GROUP_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/input-form-group-template.html"));&lt;br /&gt; loadTemplate(HEADER_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/header-template.html"));&lt;br /&gt; loadTemplate(CASE_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/case-layout-template.html"));&lt;br /&gt; loadTemplate(TABLE_LAYOUT_TEMPLATE, this.getClass().getResourceAsStream("/form-templates-providers/custom/table-template.html"));&lt;br /&gt; &lt;br /&gt; logger.info("Custom Form renderer templates loaded successfully.");&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Customise your templates&lt;/h3&gt;&lt;div&gt;Since the templates where copied from another renderer we need to customise it, let's start with master template. Open it and replace&amp;nbsp;&lt;i style="color: #3933ff; font-family: Menlo; font-size: 12px;"&gt;${serverPath}/bootstrap&lt;/i&gt;&amp;nbsp;with&amp;nbsp;&lt;i style="color: #3933ff; font-family: Menlo; font-size: 12px;"&gt;${serverPath}/custom&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;This will ensure that our customised files will be loaded.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Make any additional changes to the master template as needed. I will just add custom text next to header.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;Master template is the place where you can add additional scripts or stylesheets. There is main js file called &lt;b&gt;kieserver-ui.js&lt;/b&gt; that provide all the logic required to manage and submit forms. It also includes validation, so in case you need extensions to that logic consider to create new file with your changes and replace the location of it to point to your new file.&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Make additional customisation to other templates as needed.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Build and deploy renderer to KIE Server&lt;/h3&gt;&lt;div&gt;Implementation is completed so now it's time to build the project and deploy to KIE Server.&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;Build the project with maven - mvn clean package&lt;/li&gt;&lt;li&gt;Deploy the project to KIE Server by coping the jar file to kie-server.war/WEB-INF/lib&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Start the server and take advantage of your custom renderer by using following URL that works for one of the sample projects - Evaluation (make sure to deploy it before using the renderer).&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;http://localhost:8080/kie-server/services/rest/server/containers/evaluation/forms/processes/evaluation/content?renderer=custom&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;http://localhost:8080/kie-server/services/rest/server/containers/evaluation/forms/tasks/1/content?renderer=custom&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-VzlMram5Aac/W-6DuE7WhTI/AAAAAAAABiQ/PEnvwJm58-kFy0TNQvXEyBQQLPU7feWHACLcBGAs/s1600/Screen%2BShot%2B2018-11-16%2Bat%2B09.44.37.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="460" data-original-width="1600" height="182" src="https://3.bp.blogspot.com/-VzlMram5Aac/W-6DuE7WhTI/AAAAAAAABiQ/PEnvwJm58-kFy0TNQvXEyBQQLPU7feWHACLcBGAs/s640/Screen%2BShot%2B2018-11-16%2Bat%2B09.44.37.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;As you can see new renderer is fully operational and customised to your needs.&lt;br /&gt;&lt;br /&gt;That's it, you have now your custom form renderer. The sample described in this article can be found in &lt;a href="https://github.com/mswiderski/custom-form-renderer"&gt;GitHub&lt;/a&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/S4O878TtTjI" height="1" width="1" alt=""/&gt;</content><summary>As it was described in this article, KIE Server now provides form renderers for process and task forms built in jBPM Console (aka workbench). Out of the box there are two renderers provided based on PatterFly to provide same look and feel as entire jBPM tooling - it's the default renderer based on Bootstrap to provide a simple alternative that utilises well established framework for building web a...</summary><dc:creator>Maciej Swiderski</dc:creator><dc:date>2018-11-16T08:57:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/11/implement-your-own-form-renderer-for.html</feedburner:origLink></entry><entry><title>Introducing Application Streams in RHEL 8</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/_Z66BB0hDjk/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><author><name>Langdon White</name></author><id>searchisko:content:id:jbossorg_blog-introducing_application_streams_in_rhel_8</id><updated>2018-11-15T17:00:50Z</updated><published>2018-11-15T17:00:50Z</published><content type="html">&lt;p&gt;With the &lt;a href="https://developers.redhat.com/rhel8/"&gt;introduction of Red Hat Enterprise Linux 8&lt;/a&gt; (RHEL 8) we have tried to greatly simplify the layout of the content available in Red Hat Enterprise Linux. The main repository, &lt;em&gt;BaseOS&lt;/em&gt;, provides the parts of the distribution that give you a running userspace on physical hardware, a virtual machine, a cloud instance or a container. The &lt;em&gt;Application Stream (AppStream)&lt;/em&gt; repository provides all the applications you might want to run in a given userspace. The &lt;em&gt;Supplemental&lt;/em&gt; repository provides other software that has special licensing. The CodeReady Linux Builder provides mostly build time components for developers (see &lt;a href="https://developers.redhat.com/blog/2018/11/15/introducing-codeready-linux-builder/"&gt;Introducing CodeReady Linux Builder&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;As a result, most RHEL 8 systems will only need two repositories enabled. However, this may lead to the the question, where do I find alternate versions of software if there is only 1 application repository? In prior versions, you would look to the RHSCL or Extras repositories. However, in RHEL 8, through a new technology called Modularity, we can offer those alternate versions in the same physical repository.&lt;span id="more-537697"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The simplest way to think about it is that we can hide parts of a repository from the package manager. In other words, we create multiple virtual repositories within one physical repository. We call these virtual repositories Application Streams (AppStreams)&lt;/p&gt; &lt;p&gt;So the word &amp;#8220;application&amp;#8221; is obvious, but why &amp;#8220;stream&amp;#8221;? Well, we want to differentiate this tooling from a classic solution to the &amp;#8220;wrong version&amp;#8221; problem, pinning. Pinning is what many users do to retain an existing version of software even after the Distribution has moved on. There are a number of problems with pinning but the simplest is that you don&amp;#8217;t get updates to the software, by design, which, unfortunately, includes security and bug fix updates. Â With the Application Streams, as you are locked to the Stream, the stream continues to &amp;#8220;flow&amp;#8221; providing you with backwards compatible updates during its supported life.&lt;/p&gt; &lt;p&gt;You may be thinking to yourself, this sounds a lot like the promise of the Red Hat Software Collections (RHSCL) components and, it is similar. However, with Software Collections (SCLs):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;the application is installed in a non-standard location&lt;/li&gt; &lt;li&gt;the name of the SCL must be unique and indicate what it is leading to complicated names&lt;/li&gt; &lt;li&gt;the collection must be enabled for every process that wishes to use it&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Application Streams on the other hand, install to the normal on disk locations and have distinct metadata to provide information about what is available in the stream. Â Application Streams are typically named for the version of the software that is included, e.g. &lt;code&gt;nodejs:8&lt;/code&gt; orÂ  &lt;code&gt;nodejs:10&lt;/code&gt;, but may use other names like &amp;#8220;stable&amp;#8221; and &amp;#8220;latest&amp;#8221; if that makes more sense for that collection of software. The one disadvantage of Application Streams from SCLs is that no two streams can be installed at the same time in to the same userspace. Â However, in our experience, this is not a common use case and is better served using containerization or virtualization to provide a second userspace.&lt;/p&gt; &lt;p&gt;Hopefully, this overview of the layout of the RHEL 8 Repositories and introduction to AppStreams is useful in providing a high level understanding of the changes with the new version. However, it is worth noting that you can safely ignore everything about AppStreams if you don&amp;#8217;t need the functionality &amp;#8212; &lt;code&gt;yum install &amp;#60;package&amp;#62;&lt;/code&gt;Â will just work, even if it is coming from an Application Stream, just as it does in RHEL 7.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#38;linkname=Introducing%20Application%20Streams%20in%20RHEL%208" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Frhel8-introducing-appstreams%2F&amp;#038;title=Introducing%20Application%20Streams%20in%20RHEL%208" data-a2a-url="https://developers.redhat.com/blog/2018/11/15/rhel8-introducing-appstreams/" data-a2a-title="Introducing Application Streams in RHEL 8"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/15/rhel8-introducing-appstreams/"&gt;Introducing Application Streams in RHEL 8&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/_Z66BB0hDjk" height="1" width="1" alt=""/&gt;</content><summary>With the introduction of Red Hat Enterprise Linux 8 (RHEL 8) we have tried to greatly simplify the layout of the content available in Red Hat Enterprise Linux. The main repository, BaseOS, provides the parts of the distribution that give you a running userspace on physical hardware, a virtual machine, a cloud instance or a container. The Application Stream (AppStream) repository provides all the a...</summary><dc:creator>Langdon White</dc:creator><dc:date>2018-11-15T17:00:50Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/15/rhel8-introducing-appstreams/</feedburner:origLink></entry><entry><title>Red Hat Enterprise Linux 8 Beta is here!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/SQ7yeG6Fj8M/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><author><name>Mike Guerette</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_enterprise_linux_8_beta_is_here</id><updated>2018-11-15T14:06:09Z</updated><published>2018-11-15T14:06:09Z</published><content type="html">&lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Enterprise Linux 8 Beta is here!&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;And itâs been built with production stability and development agility in mind.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Thereâs so much to say about RHEL 8 Beta, but I want to focus on just a few points from the corporate &lt;/span&gt;&lt;a href="http://redhat.com/en/blog/powering-its-future-while-preserving-present-introducing-red-hat-enterprise-linux-8-beta"&gt;&lt;span style="font-weight: 400;"&gt;announcement&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; that highlight Red Hat Enterprise Linux 8 Beta as a developer platform that:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Simplifies application development &amp;#8211; with less setup and config effort, you can more quickly get to writing code&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Is the easiest RHEL yet for developers that are new to Linux&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Is for traditional and cloud/container applications with many new tools for both&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Already delivers dozens of tools to build and test applications&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Now letâs zoom in on what these mean.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;âToo slow, too fastâ&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Weâve gotten this feedback a lot when discussing availability and support of development packages. To address this dichotomy, Red Hat Enterprise Linux 8 Beta has built in the concept of Application Streams to deliver userspace packages (programming languages, compilers, databases, etc.) more simply and with greater flexibility &amp;#8211; this addresses the âtoo slowâ. Â For the âtoo fastâ requirement, there are also âCoreâ components that have the same lifecycle as the operating system &amp;#8211; 10 years. Users will often have a version in each grouping. Application Streams &amp;#8211; think of them as âson of Software Collectionsâ &amp;#8211; are a simpler way to deliver this modularity with improved installation, use, and re-use.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;OS Architecture&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;To simplify your development experience, Red Hat Enterprise Linux 8 has been simplified since it is based on two pre-enabled repositories:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;BaseOS&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; &amp;#8211; âmostlyâ OS content&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Application Stream (AppStream) &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;&amp;#8211; most developer tools will be here&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Content in &lt;/span&gt;&lt;b&gt;BaseOS&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; is intended to provide the core set of the underlying operating system functionality that provides the foundation for all installations. This content is available in the traditional RPM format. For a list of BaseOS packages, see &lt;/span&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8-beta/html-single/8.0_beta_release_notes/#Packages-in-BaseOS"&gt;&lt;span style="font-weight: 400;"&gt;Appendix A, &lt;/span&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;Packages in BaseOS&lt;/span&gt;&lt;/i&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Content in &lt;/span&gt;&lt;b&gt;Application Streams&lt;/b&gt;&lt;span style="font-weight: 400;"&gt; is intended to provide additional functionality beyond what is available in BaseOS. This content set includes additional user space applications, runtime languages, and databases that support the varied workloads and use cases, e.g. âToo Slowâ. Content in AppStream is available in one of two formats &amp;#8211; the familiar RPM format and an extension to the RPM format called &lt;/span&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;modules&lt;/span&gt;&lt;/i&gt;&lt;span style="font-weight: 400;"&gt; that simply package use/re-use. Components build as &lt;/span&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;modules&lt;/span&gt;&lt;/i&gt;&lt;span style="font-weight: 400;"&gt; (e.g PHP) are called &lt;/span&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;streams&lt;/span&gt;&lt;/i&gt;&lt;span style="font-weight: 400;"&gt; (e.g PHP 7.2). For a list of AppStream packages, see &lt;/span&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8-beta/html-single/8.0_beta_release_notes/#Packages-in-Appstream"&gt;&lt;span style="font-weight: 400;"&gt;Appendix B, &lt;/span&gt;&lt;i&gt;&lt;span style="font-weight: 400;"&gt;Packages in AppStream&lt;/span&gt;&lt;/i&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Linux containers&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Linux containers are a critical component of digital transformation (or cloud-native or however you want to label it), so Red Hatâs lightweight, open standards-based container toolkit is now fully supported and included with Red Hat Enterprise Linux 8. Built with enterprise IT security needs in mind, &lt;/span&gt;&lt;a href="https://www.redhat.com/en/blog/daemon-haunted-container-world-no-longer-introducing-buildah-10"&gt;&lt;b&gt;Buildah&lt;/b&gt;&lt;/a&gt; &lt;span style="font-weight: 400;"&gt;(container building), &lt;/span&gt;&lt;a href="https://developers.redhat.com/articles/podman-next-generation-linux-container-tools/"&gt;&lt;b&gt;Podman&lt;/b&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; (running containers) and &lt;/span&gt;&lt;a href="https://blog.openshift.com/promoting-container-images-between-registries-with-skopeo/"&gt;&lt;b&gt;Skopeo&lt;/b&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; (sharing/finding containers) help developers find, run, build and share containerized applications more quickly and efficiently, thanks to the distributed and daemonless nature of the tools. &amp;#8216;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Developer tools&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Enterprise Linux 8 includes dozens of tools and weâve already assembled a number of How-to guides to get you started. Read about them on the &lt;/span&gt;&lt;a href="https://developers.redhat.com/rhel8"&gt;&lt;span style="font-weight: 400;"&gt;developers.redhat.com/rhel8&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. Weâll be added more How-toâs throughout the beta, so visit the &lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Download it&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;There are 3 ways to access RHEL 8 beta and they based on your existing relationship with Red Hat:&lt;/span&gt;&lt;/p&gt; &lt;ol&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Current Red Hat Developer members can login and download today &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;at &lt;/span&gt;&lt;a href="https://developers.redhat.com/rhel8"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Developer&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;If youâre not a Red Hat Developer member, sign-up (itâs free and easy to do) and download RHEL 8 beta. &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;If youâre a current Red Hat Enterprise Linux corporate customer, log into the &lt;/span&gt;&lt;a href="https://access.redhat.com/products/red-hat-enterprise-linux/beta"&gt;&lt;span style="font-weight: 400;"&gt;Customer Portal&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; to participate in the RHEL 8 customer beta.&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Resources&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;a href="http://redhat.com/en/blog/powering-its-future-while-preserving-present-introducing-red-hat-enterprise-linux-8-beta"&gt;&lt;span style="font-weight: 400;"&gt;Read&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; about more Red Hat Enterprise Linux 8 Beta announcement regarding new capabilities on:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Networking&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Security&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Systems management&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;File systems and storage&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;References:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="http://developers.redhat.com/rhel8"&gt;&lt;span style="font-weight: 400;"&gt;RHEL 8 Beta info page for application developers&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://wp.me/p8e0as-2fsJ"&gt;&lt;span style="font-weight: 400;"&gt;Python on RHEL 8&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="http://developers.redhat.com/rhel8/hw/nodejs"&gt;&lt;span style="font-weight: 400;"&gt;Node.js on RHEL 8&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8-beta/html-single/developing_applications_in_rhel_8/index#installing-and-using-dotnetcore"&gt;&lt;span style="font-weight: 400;"&gt;.NET Core on RHEL 8&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8-beta/"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Enterprise Linux 8 beta documentation pages&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#38;linkname=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fred-hat-enterprise-linux-8-beta-is-here%2F&amp;#038;title=Red%20Hat%20Enterprise%20Linux%208%20Beta%20is%20here%21" data-a2a-url="https://developers.redhat.com/blog/2018/11/15/red-hat-enterprise-linux-8-beta-is-here/" data-a2a-title="Red Hat Enterprise Linux 8 Beta is here!"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/15/red-hat-enterprise-linux-8-beta-is-here/"&gt;Red Hat Enterprise Linux 8 Beta is here!&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/SQ7yeG6Fj8M" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Enterprise Linux 8 Beta is here! And itâs been built with production stability and development agility in mind. Thereâs so much to say about RHEL 8 Beta, but I want to focus on just a few points from the corporate announcement that highlight Red Hat Enterprise Linux 8 Beta as a developer platform that: Simplifies application development â with less setup and config effort, you can more qui...</summary><dc:creator>Mike Guerette</dc:creator><dc:date>2018-11-15T14:06:09Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/15/red-hat-enterprise-linux-8-beta-is-here/</feedburner:origLink></entry><entry><title>Introducing CodeReady Linux Builder</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ueHDLk2iouY/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Linux Builder" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><author><name>Langdon White</name></author><id>searchisko:content:id:jbossorg_blog-introducing_codeready_linux_builder</id><updated>2018-11-15T14:01:33Z</updated><published>2018-11-15T14:01:33Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;The RHEL8 Beta introduces a new repository, the CodeReady Linux Builder (or âBuilderâ for short) that developers may need while developing applications for RHEL. As you all know âdeveloperâ is not a one size fits all term. As a result, I am taking this opportunity to try to explain when you might need Builder enabled for your development activities.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;First off, if you are a typical web developer, dealing with PHP, Ruby, or Perl you are unlikely to need the content delivered through Builder. The PHP packages, Ruby gems, and Perl modules provided in the AppStream repository will, in most cases, provide sufficient functionality to develop and run applications you create yourself and to run frameworks like Drupal, WordPress, Rails, or Twiki. Â Please see the appropriate &lt;/span&gt;&lt;a href="http://developers.redhat.com/rhel8"&gt;&lt;span style="font-weight: 400;"&gt;HowTos&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;Â for getting these things up and running.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Ruby and Perl both have additional libraries made available in the Builder repository. However, they are less commonly used or used at build time only. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Next we have Java developers. Again, much of the functionality and jars you would expect to use normally have been provided in the AppStream. For example ant, maven and apache-commons-logging can be found directly in AppStream. However, if you need some of the build-only components, you would find those in the Builder repository. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;If you are a .Net developer, you can find the Core Runtime &amp;#38; tools directly in AppStream as the âdotnetâ package. When you build applications you will be pulling most of your dependencies from Microsoft or the upstream of those dependencies. As a .Net developer, you will not need the Builder repository. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Moving on to the traditionally compiled languages, the Builder repository is really targeted to you. For languages like C and C++, many of the header files, devel packages, etc. can be found in the Builder repository. Â As this sort of developer, you will definitely want to have the Builder repository enabled on your build machines. However, you should not, normally, need the repository enabled on your runtime deployments. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Much like .Net, the LLVM/Clang, Go &amp;#38; Rust language compilers are provided directly in AppStream with a few tools to support development. If you use one of these languages, you wonât need the Builder repository.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Last but not least, when you want to package and deploy your applications, you can find many of the tools that support you in this process in the Builder repository as well. For example, meson, dejagnu, and doxygen are available for use. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Hopefully, you found this description of the new Code Ready Linux Builder helpful and we really hope the changes to the content repositories with RHEL8 make things simpler and easier to find.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;https://wp.me/p8e0as-2fmr&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#38;linkname=Introducing%20CodeReady%20Linux%20Builder" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F15%2Fintroducing-codeready-linux-builder%2F&amp;#038;title=Introducing%20CodeReady%20Linux%20Builder" data-a2a-url="https://developers.redhat.com/blog/2018/11/15/introducing-codeready-linux-builder/" data-a2a-title="Introducing CodeReady Linux Builder"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/15/introducing-codeready-linux-builder/"&gt;Introducing CodeReady Linux Builder&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ueHDLk2iouY" height="1" width="1" alt=""/&gt;</content><summary>The RHEL8 Beta introduces a new repository, the CodeReady Linux Builder (or âBuilderâ for short) that developers may need while developing applications for RHEL. As you all know âdeveloperâ is not a one size fits all term. As a result, I am taking this opportunity to try to explain when you might need Builder enabled for your development activities. First off, if you are a typical web developer, d...</summary><dc:creator>Langdon White</dc:creator><dc:date>2018-11-15T14:01:33Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/15/introducing-codeready-linux-builder/</feedburner:origLink></entry></feed>
